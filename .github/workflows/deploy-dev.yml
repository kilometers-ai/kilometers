name: Deploy Development Environment

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    name: Build & Test API
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Restore dependencies
        run: dotnet restore api/Kilometers.Api/Kilometers.Api.csproj

      - name: Build
        run: dotnet build api/Kilometers.Api/Kilometers.Api.csproj --no-restore --configuration Release

      # - name: Run Tests (if any)
      #   run: dotnet test --no-build --verbosity normal

      - name: Publish
        run: dotnet publish api/Kilometers.Api/Kilometers.Api.csproj --no-build --configuration Release -o ${{ github.workspace }}/publish

      - name: Upload artifact
        id: upload_artifact
        uses: actions/upload-artifact@v4
        with:
          name: api-app
          path: ${{ github.workspace }}/publish

  deploy-infra:
    name: Deploy Infrastructure (Terraform)
    runs-on: ubuntu-latest
    needs: build
    environment: development # Configure manual approval for this environment in GitHub settings
    env:
      WORKING_DIR: ./terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Terraform Init
        id: tf-init
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform Validate
        id: tf-validate
        run: terraform validate -no-color
        working-directory: ${{ env.WORKING_DIR }}

      - name: Terraform Plan
        id: tf-plan
        run: terraform plan -var-file=config/dev.tfvars -out=tfplan -input=false -no-color
        working-directory: ${{ env.WORKING_DIR }}

      # Manual approval gate is handled by the 'environment' configuration.
      # GitHub will pause the workflow here until an authorized user approves it.

      - name: Terraform Apply
        id: tf-apply
        run: terraform apply -auto-approve -input=false tfplan
        working-directory: ${{ env.WORKING_DIR }}

  deploy-app:
    name: Deploy API Application
    runs-on: ubuntu-latest
    needs: deploy-infra
    environment: development # This job also runs against the same environment.

    steps:
      - name: Download API artifact
        uses: actions/download-artifact@v4
        with:
          name: api-app
          path: ${{ github.workspace }}/publish

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets.API_APP_SERVICE_NAME }}
          package: ${{ github.workspace }}/publish

      - name: Echo deployment URL
        run: 'echo "Deployment successful. App URL: ${{ steps.deploy-to-webapp.outputs.webapp-url }}"'
